// Top-level build file where you can add configuration options common to all sub-projects/modules.
//apply from: 'buildconfiguration/dependencies.gradle'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

project.ext {
    //Android
    androidBuildToolsVersion = "23.0.3"
    androidMinSdkVersion = 14
    androidTargetSdkVersion = 23
    androidCompileSdkVersion = 21
    androidVersionCode = 1

    //Libraries
    daggerVersion =                     '2.6'
    javaxAnnotationVersion =            '1.0'
    retrofitVersion =                   '2.0.0-beta3'
    butterKnifeVersion =                '8.2.1'
    jodaTimeVersion =                   '2.9.4'
    androidSupportVersion =             '23.4.0'
    picassoVersion =                    '2.5.2'
    rxAndroidVersion =                  '1.2.1'
    rxJavaVersion =                     '1.1.6'
    mockitoVersion =                    '1.10.19'
    dexmakerVersion =                   '1.4'
    espressoVersion =                   '2.0'
    testingSupportLibVersion =          '0.1'
    leakCanaryVersion =                 '1.3.1'
    gsonVersion =                       '2.3'
    robolectricVersion =                '3.0'
    daggerMockVersion =                 '0.6.2'

    moduleDependencies = [
            appCompatV7 :               "com.android.support:appcompat-v7:${androidSupportVersion}",
            supportV4 :                 "com.android.support:support-v4:${androidSupportVersion}",
            recyclerViewV7 :            "com.android.support:recyclerview-v7:${androidSupportVersion}",
            daggerCompiler:             "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:                     "com.google.dagger:dagger:${daggerVersion}",
            javaxAnnotation:            "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            butterKnife:                "com.jakewharton:butterknife:${butterKnifeVersion}",
            butterKnifeCompiler:        "com.jakewharton:butterknife-compiler:${butterKnifeVersion}",
            retrofit2:                  "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofit2ConverterGson:     "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofit2AdapterRxJava:     "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}",
            jodaTime :                  "joda-time:joda-time:${jodaTimeVersion}",
            picasso :                   "com.squareup.picasso:picasso:${picassoVersion}",
            rxJava:                     "io.reactivex:rxjava:${rxJavaVersion}",
            rxAndroid:                  "io.reactivex:rxandroid:${rxAndroidVersion}",
            gson:                       "com.google.code.gson:gson:${gsonVersion}",
            robolectric:                "org.robolectric:robolectric:${robolectricVersion}",
            mockito:                    "org.mockito:mockito-core:${mockitoVersion}",
            dexmaker:                   "com.crittercism.dexmaker:dexmaker:${dexmakerVersion}",
            dexmakerMockito:            "com.crittercism.dexmaker:dexmaker-mockito:${dexmakerVersion}",
            dexmakerDx:                 "com.crittercism.dexmaker:dexmaker-dx:${dexmakerVersion}",
            espresso:                   "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            testingSupportLib:          "com.android.support.test:testing-support-lib:${testingSupportLibVersion}",
            leakCanary:                 "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            daggerMock:                 "com.github.fabioCollini:DaggerMock:${daggerMockVersion}",
    ]
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
